P1.2
import socket
import os

# Configuración del servidor
HOST = '127.0.0.1'  
PORT = 9999  # Puedes usar el puerto que quieras

# Crear el socket del servidor
server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
server_socket.bind((HOST, PORT))
server_socket.listen(5)

print(f"Servidor iniciado en {HOST}:{PORT}")

while True:
    client_socket, client_address = server_socket.accept()  # Acepta una conexión
    print(f"Conexión recibida de {client_address}")

    request = client_socket.recv(1024).decode()  # Recibe la solicitud HTTP
    print(f"Solicitud recibida:\n{request}")

    # Obtener la primera línea de la solicitud HTTP
    request_line = request.split("\n")[0]
    print(f"Petición: {request_line}")

    # Extraer el archivo solicitado
    file_requested = request_line.split(" ")[1]
    
    if file_requested == "/":
        file_requested = "/index.html"

    file_path = "." + file_requested  # Ruta del archivo solicitado

    # Verificar si el archivo existe
    if os.path.exists(file_path):
        with open(file_path, "rb") as f:
            content = f.read()
        
        # Respuesta HTTP con el contenido del archivo
        response = (
            "HTTP/1.1 200 OK\r\n"
            "Content-Type: text/html\r\n"
            f"Content-Length: {len(content)}\r\n"
            "Connection: close\r\n\r\n"
        ).encode() + content
    else:
        # Responder con un 404 si el archivo no existe
        response = (
            "HTTP/1.1 404 Not Found\r\n"
            "Content-Type: text/html\r\n"
            "Connection: close\r\n\r\n"
            "<h1>404 Not Found</h1><p>El archivo solicitado no existe.</p>".encode()
        )

    client_socket.sendall(response)  # Enviar la respuesta
    client_socket.close()  # Cerrar conexión con el cliente

