#P1.2
import socket
import os

# Configuración del servidor
HOST = '127.0.0.1'  
PORT = 9999  # Puedes usar el puerto que quieras el 8080 es de web

# Crear el socket del servidor
ssocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
ssocket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
ssocket.bind((HOST, PORT))
ssocket.listen(5)

print(f"Servidor iniciado en {HOST}:{PORT}")

while True:
    csocket, dircliente = ssocket.accept()  # Acepta una conexión
    print(f"Conexión recibida de {dircliente}")

    mensaje = csocket.recv(1024).decode()  # Recibe la solicitud HTTP
    print(f"Solicitud recibida:\n{archivo}")

    # Obtener la primera línea de la solicitud HTTP
    linea = mensaje.split("\n")[0] #divides el texto en las lineas (py añade nos /r/n y split los detecta para hacer la div)
    print(f"Petición: {linea}")

    # Extraer el archivo solicitado
    archivo = linea.split(" ")[1] #divide las lineas en funcion de los espacios, misma forma que el pl
    
    if archivo == "/":
        archivo = "/index.html" #aqi busca la direccion del html

    direccionruta = "." + archivo  # Ruta del archivo solicitado

    # Verificar si el archivo existe
    if os.path.exists(direccionruta): #si no existe no se ejecuta 
        with open(direccionruta, "rb") as f:
            contenido = f.read()
        
        # Respuesta HTTP con el contenido del archivo
        response = (
            "HTTP/1.1 200 OK\r\n"
            "Content-Type: text/html\r\n"
            f"Content-Length: {len(contenido)}\r\n"
            "Connection: close\r\n\r\n"
        ).encode() + contenido
    else:
        # Responder con un 404 si el archivo no existe
        response = (
            "HTTP/1.1 404 Not Found\r\n"
            "Content-Type: text/html\r\n"
            "Connection: close\r\n\r\n"
            "<h1>404 Not Found</h1><p>El archivo solicitado no existe.</p>".encode()
        )

    csocket.sendall(response)  # Enviar la respuesta
    csocket.close()  # Cerrar conexión con el cliente
